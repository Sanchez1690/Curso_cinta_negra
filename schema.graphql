scalar EmailAddress
scalar URL
directive @auth on FIELD_DEFINITION | FIELD

type  Query  {
    getAuthors:[Author]!
    getSingleAuthor(id:ID!):Author!
    getPosts:[Post]!
    getOnePost(id:ID!):Post!
    me:Author!@auth
}

type Mutation  {
    createNewAuthor(data:AuthorInput):Author!
    updateOneAuthor(id:ID!,data:AuthorUpdateInput!):Author!@auth
    deleteOneAuthor(id:ID!):String!@auth
    createOnePost(data:PostInput!):Post!@auth
    updateOnePost(id:ID!,data:PostUpdateInput!):Post!@auth
    deleteOnePost(id:ID!):String!@auth 
    login(email:EmailAddress!,password:String!):Auth!
}

type Auth{
    token:String!
    message:String!
}

type Author  {
    _id:ID!
    firstName:String!
    lastName:String!
    email:EmailAddress!
    birthday:String!
    gender:GENDERS
    profilePic:URL!
    posts:[Post]!
}

input AuthorInput {
    firstName:String!
    lastName:String!
    email:EmailAddress!
    password:String!
    birthday:String
    gender:GENDERS
    profilePic:String
}

input AuthorUpdateInput{
    firstName:String
    lastName:String
    email:EmailAddress
    password:String
    birthday:String
    gender:GENDERS
    profilePic:String
    isActive:Boolean
}

type Post{
    _id:ID!
    title:String!
    content:String!
    author:Author
    cover:URL
    #likes:Int!
    likedBy:[Author]
}

input PostInput{
    title:String!
    content:String!
    #author:String!
    cover:URL
}

input PostUpdateInput{
    title:String
    content:String
    cover:URL
    likedBy:String
    isActive:Boolean
}

enum GENDERS{
    M
    F
    O
}